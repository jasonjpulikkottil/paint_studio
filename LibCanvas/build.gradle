/**

 */
task wrapper(type: Wrapper){
    gradleVersion = '4.1.2'

}

apply plugin: 'org.catrobat.gradle.androidemulators'

emulators {
    install project.hasProperty('installSdk')

    dependencies {
        sdk()
    }

    emulator 'android24', {
        avd {
            systemImage = 'system-images;android-24;default;x86_64'
            sdcardSizeMb = 200
            hardwareProperties += ['hw.ramSize': 800, 'vm.heapSize': 128]
            screenDensity = 'xhdpi'
        }

        parameters {
            resolution = '768x1280'
            language = 'en'
            country = 'US'
        }
    }
}

apply plugin: 'com.android.library'
apply plugin: 'jacoco-android'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'com.novoda.bintray-release'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'kotlin-android'

apply from: 'gradle/adb_tasks.gradle'
apply from: 'gradle/code_quality_tasks.gradle'

check.dependsOn 'checkstyle'
check.dependsOn 'pmd'

jacoco {
    toolVersion = "0.8.5"
}

jacocoAndroidUnitTestReport {
    csv.enabled false
    html.enabled true
    xml.enabled true
}

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    dexOptions {
        preDexLibraries = false
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    defaultConfig {
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        versionCode rootProject.ext.androidVersionCode
        versionName rootProject.ext.androidVersionName
        multiDexEnabled true

    }

    buildTypes {
        release {
          //  minifyEnabled false
           // proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        signedRelease {
        }
        debug {
            testCoverageEnabled = project.hasProperty('enableCoverage')
           // countDebugDexMethods.enabled = false
            // Multidex is required as espresso and mockito/bytebuddy are adding more functions
            // than should be allowed by law.
            // See https://github.com/mockito/mockito/issues/1112
          //  multiDexEnabled true
        }
    }

    lintOptions {
        // specific ignores should be defined via lint.xml file
        lintConfig file('config/lint.xml')
        ignore 'ClickableViewAccessibility', 'StaticFieldLeak', 'GradleDependency', 'OldTargetApi'

        textReport true
        xmlReport true
        htmlReport true
        xmlOutput file("build/reports/lint-report.xml")
        htmlOutput file("build/reports/lint-report.html")
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'

      implementation project(':LibColorpicker')
  //  implementation project(':filter')
  //  implementation project(':tuner')

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.8'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1'

   // debugImplementation 'androidx.multidex:multidex:2.0.0'

    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:3.8.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'org.mockito:mockito-android:3.3.0'

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
    androidTestImplementation "androidx.test.uiautomator:uiautomator:2.2.0"

    pmd 'net.sourceforge.pmd:pmd-core:5.8.1'
    pmd 'net.sourceforge.pmd:pmd-java:5.8.1'

    checkstyle 'com.puppycrawl.tools:checkstyle:7.6'


    implementation "com.github.nikartm:fit-button:1.2.1"

    implementation 'com.karumi:dexter:6.2.2'
    implementation 'ru.bartwell:safhelper:1.0.0'

}

tasks.withType(Javadoc).all {
    enabled = false
}

publish {
    userOrg = 'catrobat'
    repoName = 'PaintStudio'
    groupId = 'com.jdots.paint'
    artifactId = 'PaintStudio'
    publishVersion = rootProject.ext.androidVersionName
    licences = ['AGPL-V3']
    desc = 'A graphical paint editor library for Android'
    website = 'https://github.com/Catrobat/PaintStudio'
    issueTracker = 'https://jira.catrob.at/browse/PaintStudio'
    repository = "${website}.git"
}

if (project.hasProperty('jenkins')) {
    android.dexOptions.preDexLibraries = false
}
